<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Algo on 戈壁堂</title><link>http://gebitang.com/topics/algo/</link><description>Recent content in Algo on 戈壁堂</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 07 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://gebitang.com/topics/algo/index.xml" rel="self" type="application/rss+xml"/><item><title>算法练习LinkedList(一)--P2</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%B8%80--p2/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%B8%80--p2/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/14927be86814">link on JianShu&lt;/a>&lt;/p>
&lt;p>已废弃，参考&amp;ndash;&lt;a href="https://www.jianshu.com/p/5c384936995c">算法练习LinkedList(三): P2、P19&lt;/a>&lt;/p></description></item><item><title>算法练习LinkedList(七)--P82</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%B8%83--p82/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%B8%83--p82/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/e3830bfc76e7">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/">Remove Duplicates from Sorted List 2&lt;/a> Medium&lt;/p>
&lt;p>Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.&lt;/p>
&lt;p>Example 1:&lt;/p>
&lt;blockquote>
&lt;p>Input: 1-&amp;gt;2-&amp;gt;3-&amp;gt;3-&amp;gt;4-&amp;gt;4-&amp;gt;5
Output: 1-&amp;gt;2-&amp;gt;5&lt;/p>
&lt;/blockquote>
&lt;p>Example 2:&lt;/p>
&lt;blockquote>
&lt;p>Input: 1-&amp;gt;1-&amp;gt;1-&amp;gt;2-&amp;gt;3
Output: 2-&amp;gt;3&lt;/p>
&lt;/blockquote>
&lt;p>昨天做得有点郁闷了。‘精准原子’操作的套路还是没有掌握，写半天没完成效果。按照O(n2)的思路实现就有点暴力了。&lt;/p></description></item><item><title>算法练习LinkedList(三)--P2、P19</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%B8%89--p2p19/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%B8%89--p2p19/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/5c384936995c">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/linked-list/">linked-list&lt;/a> Medium&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/add-two-numbers/">2. Add Two Numbers Medium&lt;/a>&lt;/p>
&lt;p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in &lt;strong>reverse order&lt;/strong> and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.&lt;/p>
&lt;p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.&lt;/p></description></item><item><title>算法练习LinkedList(九)--P92</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%B9%9D--p92/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%B9%9D--p92/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/8550b5adf9b6">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/reverse-linked-list-ii/">92. Reverse Linked List II&lt;/a>&lt;/p>
&lt;p>Reverse a linked list from position m to n. Do it in one-pass.&lt;/p>
&lt;p>Note: 1 ≤ m ≤ n ≤ length of list.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;blockquote>
&lt;p>Input: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL, m = 2, n = 4&lt;br>
Output: 1-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;5-&amp;gt;NULL&lt;/p>
&lt;/blockquote>
&lt;p>可以先复习一下翻转链表的实现。链表操作两个基本场景——&lt;/p></description></item><item><title>算法练习LinkedList(二)--P19</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%BA%8C--p19/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%BA%8C--p19/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/48acb3e748d3">link on JianShu&lt;/a>&lt;/p>
&lt;p>已废弃，参考&amp;ndash;&lt;a href="https://www.jianshu.com/p/5c384936995c">算法练习LinkedList(三): P2、P19&lt;/a>&lt;/p></description></item><item><title>算法练习LinkedList(五)--P61</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%BA%94--p61/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E4%BA%94--p61/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/06c00c9a2ca4">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/rotate-list/">Rotate List&lt;/a> Medium&lt;/p>
&lt;p>Given a linked list, rotate the list to the right by k places, where &lt;code>k&lt;/code> is non-negative.&lt;/p>
&lt;p>Example 1:&lt;/p>
&lt;blockquote>
&lt;p>Input: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL, k = 2&lt;br>
Output: 4-&amp;gt;5-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;NULL&lt;/p>
&lt;/blockquote>
&lt;p>Explanation:&lt;/p>
&lt;blockquote>
&lt;p>rotate 1 steps to the right: 5-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;NULL&lt;br>
rotate 2 steps to the right: 4-&amp;gt;5-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;NULL&lt;/p>
&lt;/blockquote>
&lt;p>Example 2:&lt;/p>
&lt;blockquote>
&lt;p>Input: 0-&amp;gt;1-&amp;gt;2-&amp;gt;NULL, k = 4&lt;br>
Output: 2-&amp;gt;0-&amp;gt;1-&amp;gt;NULL&lt;/p></description></item><item><title>算法练习LinkedList(八)--P86</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%85%AB--p86/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%85%AB--p86/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/6e8a45afed24">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/partition-list/">86. Partition List&lt;/a> Medium&lt;/p>
&lt;p>Given a linked list and a value &lt;code>x&lt;/code>, partition it such that all nodes less than &lt;code>x&lt;/code> come before nodes greater than or equal to x.&lt;/p>
&lt;p>You should preserve the original relative order of the nodes in each of the two partitions.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;blockquote>
&lt;p>Input: head = 1-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;5-&amp;gt;2, x = 3
Output: 1-&amp;gt;2-&amp;gt;2-&amp;gt;4-&amp;gt;3-&amp;gt;5&lt;/p>
&lt;/blockquote>
&lt;p>梳理一下思路，应该很快可以写出来这样一个架子：&lt;/p></description></item><item><title>算法练习LinkedList(六)--P83</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%85%AD--p83/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%85%AD--p83/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/a59afd2f3f5c">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list/">Remove Duplicates from Sorted List&lt;/a> Easy&lt;/p>
&lt;p>Given a sorted linked list, delete all duplicates such that each element appear only once.&lt;/p>
&lt;p>Example 1:&lt;/p>
&lt;blockquote>
&lt;p>Input: 1-&amp;gt;1-&amp;gt;2&lt;br>
Output: 1-&amp;gt;2&lt;/p>
&lt;/blockquote>
&lt;p>Example 2:&lt;/p>
&lt;blockquote>
&lt;p>Input: 1-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;3&lt;br>
Output: 1-&amp;gt;2-&amp;gt;3&lt;/p>
&lt;/blockquote>
&lt;p>直接的实现对于最后一个节点的处理不够精细，调试后完成了算法。&lt;/p></description></item><item><title>算法练习LinkedList(十)--P138</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%8D%81--p138/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%8D%81--p138/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/26ab4d0b6eb5">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/copy-list-with-random-pointer/">138. Copy List with Random Pointer&lt;/a>&lt;/p>
&lt;p>A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.&lt;/p>
&lt;p>Return a &lt;a href="https://en.wikipedia.org/wiki/Object_copying#Deep_copy">&lt;strong>deep copy&lt;/strong>&lt;/a> of the list.&lt;/p>
&lt;p>&lt;a href="https://segmentfault.com/a/1190000010648514">Java中的深拷贝&lt;/a>：对象中的对象需要重写clone方法，将所有基本类型重新clone&lt;/p></description></item><item><title>算法练习LinkedList(十一)--P109</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%8D%81%E4%B8%80--p109/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%8D%81%E4%B8%80--p109/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/4781e504ed19">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/">109. Convert Sorted List to Binary Search Tree&lt;/a>&lt;/p>
&lt;p>Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.&lt;/p>
&lt;p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.&lt;/p>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;br>
Given the sorted linked list: [-10,-3,0,5,9], One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:&lt;/p></description></item><item><title>算法练习LinkedList(四)--P21</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%9B%9B--p21/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0linkedlist%E5%9B%9B--p21/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/563653ad8de2">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/merge-two-sorted-lists/">21. Merge Two Sorted Lists&lt;/a> Easy&lt;/p>
&lt;p>Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.&lt;/p>
&lt;blockquote>
&lt;pre>&lt;code>Example:

Input: 1-&amp;gt;2-&amp;gt;4, 1-&amp;gt;3-&amp;gt;4
Output: 1-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;4
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;p>这是个Easy级别的，有前两次的经验，一次做对，但执行效率不高&lt;/p></description></item><item><title>算法练习Stack--P1021-easy</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p1021-easy/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p1021-easy/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/13676a9683c0">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/remove-outermost-parentheses/">1021. Remove Outermost Parentheses&lt;/a>&lt;/p>
&lt;p>A valid parentheses string is either empty (&amp;quot;&amp;quot;), &amp;ldquo;(&amp;rdquo; + A + &amp;ldquo;)&amp;rdquo;, or A + B, where A and B are valid parentheses strings, and + represents string concatenation. For example, &amp;ldquo;&amp;rdquo;, &amp;ldquo;()&amp;rdquo;, &amp;ldquo;(())()&amp;rdquo;, and &amp;ldquo;(()(()))&amp;rdquo; are all valid parentheses strings.&lt;/p></description></item><item><title>算法练习Stack--P1047-easy</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p1047-easy/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p1047-easy/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/2f56dfe13fa8">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/">1047. Remove All Adjacent Duplicates In String&lt;/a>&lt;/p>
&lt;p>Given a string S of lowercase letters, a duplicate removal consists of choosing two adjacent and equal letters, and removing them.&lt;/p></description></item><item><title>算法练习Stack--P144-Medium</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p144-medium/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p144-medium/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/5b21c3d1dd4c">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/binary-tree-preorder-traversal/">144. Binary Tree Preorder Traversal&lt;/a> Medium&lt;/p>
&lt;p>Given a binary tree, return the preorder traversal of its nodes&amp;rsquo; values.&lt;/p></description></item><item><title>算法练习Stack--P145-Hard</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p145-hard/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p145-hard/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/87161c06ebb2">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/binary-tree-postorder-traversal/">145. Binary Tree Postorder Traversal&lt;/a> Hard&lt;/p>
&lt;p>Given a binary tree, return the postorder traversal of its nodes&amp;rsquo; values.&lt;/p></description></item><item><title>算法练习Stack--P844-easy</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p844-easy/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p844-easy/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/dc1fa553754a">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/backspace-string-compare/">844. Backspace String Compare&lt;/a> Easy&lt;/p>
&lt;p>Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.&lt;/p></description></item><item><title>算法练习Stack--P94-Medium</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p94-medium/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack--p94-medium/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/07edbaa4194d">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/binary-tree-inorder-traversal/">94. Binary Tree Inorder Traversal&lt;/a> Medium&lt;/p>
&lt;p>Given a binary tree, return the &lt;em>inorder&lt;/em> traversal of its nodes&amp;rsquo; values.&lt;/p></description></item><item><title>算法练习Stack(一)--P20</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%B8%80--p20/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%B8%80--p20/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/9fb3903fd0db">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/valid-parentheses/">valid parentheses &lt;/a>&lt;/p>
&lt;p>Given a string containing just the characters &amp;lsquo;(&amp;rsquo;, &amp;lsquo;)&amp;rsquo;, &amp;lsquo;{&amp;rsquo;, &amp;lsquo;}&amp;rsquo;, &amp;lsquo;[&amp;rsquo; and &amp;lsquo;]&amp;rsquo;, determine if the input string is valid.&lt;/p></description></item><item><title>算法练习Stack(七)--P496</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%B8%83--p496/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%B8%83--p496/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/98aa8d2bfdf0">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/next-greater-element-i/">496. Next Greater Element I&lt;/a> Easy&lt;/p>
&lt;p>You are given two arrays (&lt;strong>without duplicates&lt;/strong>) &lt;code>nums1&lt;/code> and &lt;code>nums2&lt;/code> where &lt;code>nums1’s&lt;/code> elements are subset of &lt;code>nums2&lt;/code>. Find all the next greater numbers for &lt;code>nums1's&lt;/code> elements in the corresponding places of &lt;code>nums2&lt;/code>.&lt;/p></description></item><item><title>算法练习Stack(三)--P42</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%B8%89--p42/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%B8%89--p42/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/d631db1f823e">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a>&lt;br>
&lt;a href="https://leetcode.com/problems/trapping-rain-water/">42. Trapping Rain Water&lt;/a> Hard&lt;/p>
&lt;p>Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.&lt;/p></description></item><item><title>算法练习Stack(二)--P71</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%BA%8C--p71/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%BA%8C--p71/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/f5a38317dcda">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a>&lt;br>
&lt;a href="https://leetcode.com/problems/simplify-path/">71. simplify path&lt;/a> Medium&lt;/p>
&lt;p>Given an &lt;strong>absolute path&lt;/strong> for a file (Unix-style), simplify it. Or in other words, convert it to the &lt;strong>canonical path&lt;/strong>.&lt;/p></description></item><item><title>算法练习Stack(五)--P225、232</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%BA%94--p225232/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E4%BA%94--p225232/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/f3ceb9e44fdc">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/implement-stack-using-queues/">225. Implement Stack using Queues&lt;/a> Easy&lt;br>
&lt;a href="https://leetcode.com/problems/implement-queue-using-stacks/">232. Implement Queue using Stacks&lt;/a> Easy&lt;/p>
&lt;p>这两道提互为实现，刚好放到一起学习。既然两种数据结构可以互相实现，可以看看有什么相似之处。&lt;/p></description></item><item><title>算法练习Stack(六)--P173</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E5%85%AD--p173/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E5%85%AD--p173/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/2622d5de1452">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/binary-search-tree-iterator/">173. Binary Search Tree Iterator&lt;/a> Medium&lt;/p>
&lt;p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.&lt;br>
Calling &lt;code>next()&lt;/code> will return the next smallest number in the BST.&lt;/p></description></item><item><title>算法练习Stack(四)--P155</title><link>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E5%9B%9B--p155/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/algo/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0stack%E5%9B%9B--p155/</guid><description>&lt;p>&lt;a href="https://www.jianshu.com/p/220070c413c5">link on JianShu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/stack/">栈stack&lt;/a> &lt;br>
&lt;a href="https://leetcode.com/problems/min-stack/">155. Min Stack&lt;/a> Easy&lt;/p>
&lt;p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.&lt;/p></description></item><item><title>Problems</title><link>http://gebitang.com/post/algo/problems/</link><pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/algo/problems/</guid><description>&lt;p>list of all Problems from leetcode.&lt;/p></description></item><item><title>Algo issues</title><link>http://gebitang.com/post/algo/algo-issues/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/algo/algo-issues/</guid><description>&lt;h2 id="第一周题目">第一周题目&lt;/h2>
&lt;h3 id="链表">链表&lt;/h3>
&lt;p>简单：https://leetcode.com/problems/remove-duplicates-from-sorted-list/&lt;br>
简单：https://leetcode.com/problems/merge-two-sorted-lists&lt;br>
中等：https://leetcode.com/problems/swap-nodes-in-pairs/&lt;br>
中等：https://leetcode.com/problems/linked-list-cycle-ii&lt;br>
困难：https://leetcode.com/problems/reverse-nodes-in-k-group/&lt;/p></description></item></channel></rss>