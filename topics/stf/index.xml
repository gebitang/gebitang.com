<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>STF on 戈壁堂</title><link>http://gebitang.com/topics/stf/</link><description>Recent content in STF on 戈壁堂</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://gebitang.com/topics/stf/index.xml" rel="self" type="application/rss+xml"/><item><title>STF</title><link>http://gebitang.com/post/how/stf/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/how/stf/</guid><description>STF的核心功能可以理解为：“同步图像” + “点击”。前者使用minicap完成，后者依赖minitouch。 虽然目前依然是3.4.1版本，但</description></item><item><title>App开源测试框架去哪儿了</title><link>http://gebitang.com/post/jiansh/stf/app%E5%BC%80%E6%BA%90%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%8E%BB%E5%93%AA%E5%84%BF%E4%BA%86/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/app%E5%BC%80%E6%BA%90%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%8E%BB%E5%93%AA%E5%84%BF%E4%BA%86/</guid><description>link on JianShu 中文搜索 App开源测试框架，大概率可以看到下面这个文章的变种—— 移动APP自动化测试框架对比 2016年文章，现在的内容依然很多来自这篇</description></item><item><title>App测试平台有哪些</title><link>http://gebitang.com/post/jiansh/stf/app%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E6%9C%89%E5%93%AA%E4%BA%9B/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/app%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E6%9C%89%E5%93%AA%E4%BA%9B/</guid><description>link on JianShu 云测Testinhttps://www.testin.cn/ WeTest腾讯质量开放平台 https://wetest.qq.com/ 阿里移动测试平台 http://mqc.aliyun.com/ 到https://www.</description></item><item><title>App测试框架在哪儿</title><link>http://gebitang.com/post/jiansh/stf/app%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%9C%A8%E5%93%AA%E5%84%BF/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/app%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%9C%A8%E5%93%AA%E5%84%BF/</guid><description>link on JianShu Appium 目前的事实上通用方案 Macaca 轻量级的Appium，by 阿里巴巴 idb Facebook自己不再维护WebDriverAgent之后，自研了idb</description></item><item><title>brew关键参数</title><link>http://gebitang.com/post/jiansh/stf/brew%E5%85%B3%E9%94%AE%E5%8F%82%E6%95%B0/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/brew%E5%85%B3%E9%94%AE%E5%8F%82%E6%95%B0/</guid><description>link on JianShu STF之Provider系列六：brew里介绍里一些基础用法。 -s, --build-from-source: 使用源码方式 --force-bottle: 使用编译好的文件。 在 fetch、install、--C</description></item><item><title>Scala-Pkg-Pug-Angular-directive</title><link>http://gebitang.com/post/jiansh/stf/scala-pkg-pug-angular-directive/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/scala-pkg-pug-angular-directive/</guid><description>link on JianShu 菜鸟教程 官方 tour 创始人说for java programmer Linux中的特殊符号及含义 使用pkg打包node应用 ➜ trynode npm install -g pkg /Users/gebitang/.nvm/versions/node/v8.12.0/bin/pkg -&amp;gt; /Users/gebitang/.nvm/versions/node/v8.12.0/lib/node_modules/pkg/lib-es5/bin.js + pkg@4.4.0 added 242 packages from 222 contributors in 93.107s getting-started cn getting started en</description></item><item><title>STF之Docker-for-Mac失败</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bdocker-for-mac%E5%A4%B1%E8%B4%A5/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bdocker-for-mac%E5%A4%B1%E8%B4%A5/</guid><description>link on JianShu ###容器访问 外部访问容器 启动容器docker container ls 进入容器 docker attach container_id 退出容器不关闭容器 Ctrl+q Ctrl+q adb basic adb detail How ADB works How ADB works cnblogs A client, which sends commands. The client runs on your development machine. You</description></item><item><title>STF之Docker系列一</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bdocker%E7%B3%BB%E5%88%97%E4%B8%80/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bdocker%E7%B3%BB%E5%88%97%E4%B8%80/</guid><description>link on JianShu docker cp foo.txt mycontainer:/foo.txt docker cp mycontainer:/foo.txt foo.txt For emphasis, mycontainer is a container ID, not an image ID. zeromq install require libsodium ./configure &amp;ndash;without-libsodium above not work, see this stf on ubuntu [centos7][stf] 环境搭建 apt-get install android-tools-adb docker run -it &amp;ndash;rm 容器在，镜像不能删除 如果有用这个镜像启动的容</description></item><item><title>STF之Node乱炖</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bnode%E4%B9%B1%E7%82%96/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bnode%E4%B9%B1%E7%82%96/</guid><description>link on JianShu 代码看到哪里记到哪里。可参考Stf源码解读 express 框架中的app.use是什么作用？ app.use([path], function) Use the given middleware function, with optional mount path, defaulting to &amp;ldquo;/&amp;rdquo;. 中间件作用 A Promise is an object representing the eventual completion</description></item><item><title>STF之OAuth探索二</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Boauth%E6%8E%A2%E7%B4%A2%E4%BA%8C/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Boauth%E6%8E%A2%E7%B4%A2%E4%BA%8C/</guid><description>link on JianShu github OAuth 参考示例教程，在github申请好OAuth Apps（settings-Developer settings-OAuth Apps-new），配置好对应的认证字</description></item><item><title>STF之Provider一键部署一</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E4%B8%80/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E4%B8%80/</guid><description>link on JianShu STF之Provider系列五里的前提条件是已经获取到里源码。在源码目录执行上面到脚本。 问题： 需要有获取到源码到权限 公司网络使用bre</description></item><item><title>STF之Provider一键部署二</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E4%BA%8C/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E4%BA%8C/</guid><description>link on JianShu TL, DR. 需要过多的准备工作，暂时放弃准备本地化的bottle for brew 针对每个formulae，大概需要这样的几个步骤： 每个formulae都有</description></item><item><title>STF之Provider系列一</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%B8%80/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%B8%80/</guid><description>link on JianShu 独立服务-未完成 目前local方式已经跑起来，如果进行分布式接入设备？官方提供都都是docker 方式 Provider role The provider role requires the following units, which must be together on a single or</description></item><item><title>STF之Provider系列七：设备共享与过滤</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%B8%83%E8%AE%BE%E5%A4%87%E5%85%B1%E4%BA%AB%E4%B8%8E%E8%BF%87%E6%BB%A4/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%B8%83%E8%AE%BE%E5%A4%87%E5%85%B1%E4%BA%AB%E4%B8%8E%E8%BF%87%E6%BB%A4/</guid><description>link on JianShu STF之复用ADB一里满足了设备复用的场景。 JAVA应用自己管理设备，只需要在使用时提前向STF申请占用即可。 参考这里的API: post-userdevices 只需</description></item><item><title>STF之Provider系列三</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%B8%89/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%B8%89/</guid><description>link on JianShu websocket的连接问题还没有解决。 昨天出现的现象是连接设备时，图像连接到了“其他”设备上。 ——今天定位到是因为独立到provid</description></item><item><title>STF之Provider系列二</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%BA%8C/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%BA%8C/</guid><description>link on JianShu EventEmitter node.js 如何使用Promise 系列一后续，现学现卖，逻辑梳理如下—— // Wait for others to acknowledge the device var register = new Promise(function(resolve) { // Tell others we found a device push.send([ wireutil.global , wireutil.envelope(new wire.DeviceIntroductionMessage( device.id , wireutil.toDeviceStatus(device.type) , new wire.ProviderMessage( solo , options.name</description></item><item><title>STF之Provider系列五</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%BA%94/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E4%BA%94/</guid><description>link on JianShu Mac环境下支持脚本自动部署 需要Mac环境已经安装了XCode，因为环境编译时需要C++的编译器。 #!/bin/bash # base on https://gist.github.com/aamnah/a62d30340de4f7ae98ea57b219d98d14 # NOTES # `which` command will tell you a program is installed ONLY</description></item><item><title>STF之Provider系列六：brew</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E5%85%ADbrew/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E5%85%ADbrew/</guid><description>link on JianShu STF之Provider系列五支持脚本自动部署。目前国内到网络环境导致使用brew install 各种依赖应用时：1）耗时；2）不稳定。 STF之Do</description></item><item><title>STF之Provider系列四</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E5%9B%9B/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bprovider%E7%B3%BB%E5%88%97%E5%9B%9B/</guid><description>link on JianShu 环境准备 在一台新的机器上从头搭建STF的provider环境。 需要adb服务 可以执行 stf provider服务模块 新机器上的Node环境为</description></item><item><title>STF之RethinkDB一</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Brethinkdb%E4%B8%80/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Brethinkdb%E4%B8%80/</guid><description>link on JianShu quick start quickstart #install npm install rethinkdb # start from where it is installed. $ rethinkdb ... ... Listening for intracluster connections on port 29015 Listening for client driver connections on port 28015 Listening for administrative HTTP connections on port 8080 Listening on cluster addresses: 127.0.0.1, ::1 Listening on driver addresses: 127.0.0.1, ::1 Listening on http addresses: 127.0.0.1, ::1 To fully expose RethinkDB on the network, bind</description></item><item><title>STF之RethinkDB三-设备使用</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Brethinkdb%E4%B8%89-%E8%AE%BE%E5%A4%87%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Brethinkdb%E4%B8%89-%E8%AE%BE%E5%A4%87%E4%BD%BF%E7%94%A8/</guid><description>link on JianShu STF之RethinkDB二 获取到设备使用、停止使用的切入口之后，甚至不需要了解设备使用的业务逻辑，就可以直接进行数据库操作，完成记录</description></item><item><title>STF之RethinkDB二</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Brethinkdb%E4%BA%8C/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Brethinkdb%E4%BA%8C/</guid><description>link on JianShu STF之RethinkDB一结束了数据库rethinkdb的基本使用。 梳理一下STF项目中对于数据库到底是如何使用的。——基于目前的理</description></item><item><title>STF之Rethinkdb四：导入导出</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Brethinkdb%E5%9B%9B%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Brethinkdb%E5%9B%9B%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</guid><description>link on JianShu rethinkdb backup rethinkdb import # export rethinkdb dump -e stf.usageRecord -f record.tag.gz # import rethinkdb import -f usageRecord.json --table stf.usageRecord --force 使用导出功能rethinkdb dump需要安装对应的python driver。默认安装的su</description></item><item><title>STF之STFService服务调用</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bstfservice%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bstfservice%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8/</guid><description>link on JianShu STF之环境搭建可能的几个坑里提到过 初始化设备时，提示类似 Setup had an error Error: Service had an error: &amp;ldquo;Error: Not found; no service started.&amp;rdquo; 官方认为有可能是杀毒软件的问题；实测需要手动先</description></item><item><title>STF之ubuntu18-04环境搭建</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bubuntu18-04%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bubuntu18-04%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid><description>link to JianShu 参考： stf on ubuntu [centos7][stf] 环境搭建 一、安装npm # https://github.com/nvm-sh/nvm wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash # 主动生效 export NVM_DIR=&amp;#34;$HOME/.nvm&amp;#34; [ -s &amp;#34;$NVM_DIR/nvm.sh&amp;#34; ] &amp;amp;&amp;amp; \. &amp;#34;$NVM_DIR/nvm.sh&amp;#34; # This loads nvm [ -s &amp;#34;$NVM_DIR/bash_completion&amp;#34; ] &amp;amp;&amp;amp; \. &amp;#34;$NVM_DIR/bash_completion&amp;#34; 二、安装nrm # https://github.com/Pana/nrm npm install -g nrm #配置私</description></item><item><title>STF之Windows环境</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bwindows%E7%8E%AF%E5%A2%83/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bwindows%E7%8E%AF%E5%A2%83/</guid><description>link on JianShu Node环境 + 依赖 rethinkdb graphicsmagick zeromq protobuf yasm pkg-config rethinkdb windows/ # go to the directory that you unpacked rethinkdb.exe in rethinkdb.exe -d c:\RethinkDB\data\ graphicsmagick 正常安装完成，可执行gm命令即可。系统安装后会自动添加环境变量 c:\program files\graphicsmagick-1.3.33-q16 https://zeromq.org/download/ protobuf releases</description></item><item><title>STF之Yarn一</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Byarn%E4%B8%80/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Byarn%E4%B8%80/</guid><description>link on JianShu Mac环境部署告一段落，同事多次建议为什么不用yarn。STF本身也包含了yarn.lock文件。简单学习一下yarn 的相关内容。 Yarn is</description></item><item><title>STF之Yarn二</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Byarn%E4%BA%8C/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Byarn%E4%BA%8C/</guid><description>link on JianShu yarn的确会快得飞起。 STF之Yarn一中简单使用后，从头开始使用yarn安装STF。 进入到bower安装前端模块时，会遇到一些问题</description></item><item><title>STF之ZeroMQ</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bzeromq/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8Bzeromq/</guid><description>link on JianShu STF consists of multiple independent processes communicating via ZeroMQ and Protocol Buffers. 使用ZeroMQ进行zmq socket通信，使用Protocol Buffers定义通信内容。 官方指南 ，正式权威</description></item><item><title>STF之一般依赖和phantomjs</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E4%B8%80%E8%88%AC%E4%BE%9D%E8%B5%96%E5%92%8Cphantomjs/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E4%B8%80%E8%88%AC%E4%BE%9D%E8%B5%96%E5%92%8Cphantomjs/</guid><description>link on JianShu brew 本地安装 只使用provider服务的话，可以不安装rethinkdb（恰好这是最大的一个文件）。brew install graphicsmagick zeromq protobuf yasm pkg-conf 如果需要，可以使</description></item><item><title>STF之从stf-local说开去</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E4%BB%8Estf-local%E8%AF%B4%E5%BC%80%E5%8E%BB/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E4%BB%8Estf-local%E8%AF%B4%E5%BC%80%E5%8E%BB/</guid><description>link on JianShu STF使用命令行stf local方式运行。 Node.js 命令行程序开发教程，执行了 npm link后，实际上执行的就是 lib/cli/index.js 中的命令。 使用yargs模块实现</description></item><item><title>STF之复用ADB一</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E5%A4%8D%E7%94%A8adb%E4%B8%80/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E5%A4%8D%E7%94%A8adb%E4%B8%80/</guid><description>link on JianShu 假如还有一个Java应用也需要连接、管理设备，是否可以和STF共享？ 在重温了官方说明以及google之后，以下方案应该是可行的： PC上</description></item><item><title>STF之安装失败问题</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</guid><description>link on JianShu 遇到实际的apk包打包问题导致在低版本上不兼容，导致安装失败。 这种情况下STF是给不出来错误提示的。 看后台log，报错信息类似—— 2019-08-27T12:36:04.694Z INF/storage:temp</description></item><item><title>STF之屏幕截图不显示-ubuntu18-04</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%E4%B8%8D%E6%98%BE%E7%A4%BA-ubuntu18-04/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%E4%B8%8D%E6%98%BE%E7%A4%BA-ubuntu18-04/</guid><description>link to JianShu TL, DR. GraphicsMagic的依赖不满足，无法支持jpeg图片的resize功能。 解决方案： 安装对应的依赖，目前截图功能使用的为jp</description></item><item><title>STF之新增页面一：方案</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2%E4%B8%80%E6%96%B9%E6%A1%88/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2%E4%B8%80%E6%96%B9%E6%A1%88/</guid><description>link on JianShu STF之RethinkDB三:设备使用里已经在数据库里记录里设备使用时长到信息，需要一个前端页面进行展示。 STF 二次开发辛酸之路里有提到如</description></item><item><title>STF之新增页面三：先画只犬</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2%E4%B8%89%E5%85%88%E7%94%BB%E5%8F%AA%E7%8A%AC/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2%E4%B8%89%E5%85%88%E7%94%BB%E5%8F%AA%E7%8A%AC/</guid><description>link on JianShu STF之新增页面三：照猫画虎画虎不成反类犬，一个页面加两天。 前天把后天接口实现了，昨天一天也没搞定到底怎么画个页面出来。最开始是参考设</description></item><item><title>STF之新增页面三：照猫画虎</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2%E4%B8%89%E7%85%A7%E7%8C%AB%E7%94%BB%E8%99%8E/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2%E4%B8%89%E7%85%A7%E7%8C%AB%E7%94%BB%E8%99%8E/</guid><description>link on JianShu 目前STF之新增页面二：融合方案对我来说要求还比较高，先照葫芦画瓢吧。 参照res/app/settings目录下对代码结构+前端页面对</description></item><item><title>STF之新增页面二：融合</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2%E4%BA%8C%E8%9E%8D%E5%90%88/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2%E4%BA%8C%E8%9E%8D%E5%90%88/</guid><description>link on JianShu 跟着练手： Code + article已经很周到了。 tag-01-angular-app 第一阶段：纯angular方式 $ctrl 含义 $ctrl is the view model object in your controller. This $ctrl is a name you choose (vm is another most common name), if you check your code</description></item><item><title>STF之环境搭建可能的几个坑</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%AF%E8%83%BD%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9D%91/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%AF%E8%83%BD%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9D%91/</guid><description>link on JianShu Error: listen EADDRINUSE :::8080 at Server.setupListenHandle 这是端口被占用导致的，更换端口即可 fatal: unable to access &amp;lsquo;https://github.com/AdiDahan/ng-context-menu.git/': Could not resolve proxy: localhost 或者 proxy had an error Error: getaddrinfo ENOTFOUND localhost 本地的hosts文件导致的无法解析localho</description></item><item><title>STF之网络流量监控</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7/</guid><description>link on JianShu STF部署在内网环境上，办公网络访问时时快时慢。需要定位一下到底是什么原因。 使用ping周期性访问服务器地址，记录显示的确网络不稳定—</description></item><item><title>STF之设备接入</title><link>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E8%AE%BE%E5%A4%87%E6%8E%A5%E5%85%A5/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/stf%E4%B9%8B%E8%AE%BE%E5%A4%87%E6%8E%A5%E5%85%A5/</guid><description>link on JianShu 这是个体力活。 先要把设备信息先记录下来，类似这样都信息需要先手动录入—— 打开USB调试 USB调试打开都开关并没有统一到“点击7次内核版</description></item><item><title>备份3-STF之OAuth探索一</title><link>http://gebitang.com/post/jiansh/stf/%E5%A4%87%E4%BB%BD3-stf%E4%B9%8Boauth%E6%8E%A2%E7%B4%A2%E4%B8%80/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/%E5%A4%87%E4%BB%BD3-stf%E4%B9%8Boauth%E6%8E%A2%E7%B4%A2%E4%B8%80/</guid><description>link on JianShu ~~STF之OAuth探索一~~删除备份 2019.07.09 21:56:49 字数 306 阅读 118 新工作第一项要将STF的ldap认证模式修改为SSO方式。 目前的背景是只在交接</description></item><item><title>学习画架构图</title><link>http://gebitang.com/post/jiansh/stf/%E5%AD%A6%E4%B9%A0%E7%94%BB%E6%9E%B6%E6%9E%84%E5%9B%BE/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/%E5%AD%A6%E4%B9%A0%E7%94%BB%E6%9E%B6%E6%9E%84%E5%9B%BE/</guid><description>link on JianShu 解决沟通障碍 达成共识 减少歧义 产品经理的高阶能力：架构图的设计与画法&amp;ndash;产品经理 如何画好架构图-微信 如何画出一张合格的技术架构</description></item><item><title>类Monkey工具对比</title><link>http://gebitang.com/post/jiansh/stf/%E7%B1%BBmonkey%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>http://gebitang.com/post/jiansh/stf/%E7%B1%BBmonkey%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94/</guid><description>link on JianShu 原生Monkey： 源码参考 实现原理：Java反射获取系统接口，注入事件 http://androidxref.com/5.0.0_r2/xref/development/cmds/monkey/src/com/android/commands/monkey/Monkey.java 控制业务逻辑； http://androidxref.com/5.0.0_r2/xref/development/cmds/monkey/src/com/android/commands/monkey/MonkeyMotionEvent.java 事件注入实现 功能—— 系统自带支持；随机点击、滑</description></item></channel></rss>